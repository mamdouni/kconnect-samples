version: '3.6'

#You may have issues if you change dependency versions

services:

  postgres:
    image: postgres:13-alpine
    hostname: postgres
    container_name: postgres
    volumes:
      - postgres-data:/postgres/data
    environment:
      POSTGRES_DB: purchasesdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      PGDATA: /postgres/data
    networks:
      - some-net
    ports:
      - "5432:5432"
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    container_name: zookeeper
    networks:
      - some-net
    environment:
      ZOOKEEPER_CLIENT_PORT: '2181'
      ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - some-net
    environment:
      KAFKA_BROKER_ID: '0'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_NUM_PARTITIONS: '12'
      KAFKA_COMPRESSION_TYPE: 'gzip'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_JMX_PORT: '9091'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false' # prevent spring boot from creating the topics
      KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'

  init-kafka:
    image: confluentinc/cp-kafka:7.7.0
    container_name: init-kafka
    networks:
      - some-net
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic jdbc.connect.view.purchases --replication-factor 1 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  # Could not run this container on my localhost machine, error :  cannot find host kafka (i think it works if you add your java consumer/producer as containers here)
  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.0
    container_name: schema-registry
    ports:
      - "8085:8085"
    links:
      - kafka
    networks:
      - some-net
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092' # Use localhost instead of kafka as this url will be called from outside docker later
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'

volumes:
  postgres-data:

networks:
  some-net:
    driver: bridge